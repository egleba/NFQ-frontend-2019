{"version":3,"sources":["client.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","list","avg","listWaiting","index","thisAvg","clientNumberInput","document","querySelector","clientTime","clientText","clientInfo","times","checkIfCLientListEmpty","innerHTML","secMinVal","Math","round","localStorage","JSON","parse","getItem","number","filter","clients","status","timesList","push","timeServiced","sum","reduce","previous","current","timeToWait","optionList","options","forEach","option","add","Option","value","selectedIndex","classList","remove","makeSelection","checkForLocalStorage","onchange","this"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAGA,IAAIK,EAOAC,EACAC,EAEAC,EACAC,EATAC,EAAoBC,SAASC,cAAc,mBAC3CC,EAAaF,SAASC,cAAc,iBACpCE,EAAaH,SAASC,cAAc,iBACpCG,EAAaJ,SAASC,cAAc,iBACpCI,EAAQ,GA0FZ,SAASC,IAC4B,GAA/BP,EAAkBQ,YACpBH,EAAWG,UAAY,8BAM3B,SAASC,EAAUV,GAEfI,EAAWK,UADTT,GAAW,GACU,KAAOW,KAAKC,MAAMZ,GAAWD,EAAQ,QACzC,GAAVC,GAAgBA,GAAW,KACb,KAAOW,KAAKC,MAAMZ,EAAU,IAAMD,EAAQ,QAE1C,KAAOY,KAAKC,MAAMZ,EAAU,MAAQD,EAAQ,SAhGvE,WACMc,aAAajB,OACfA,EAAOkB,KAAKC,MAAMF,aAAaG,QAAQ,SACxBpB,EAAKA,EAAKH,OAAS,GAAGwB,OAAS,EAY5CJ,aAAajB,OACfE,EAAcF,EAAKsB,OAAO,SAAUC,GAClC,MAAyB,WAAlBA,EAAQC,UAOrB,WAKE,IAJA,IAAIC,EAAYzB,EAAKsB,OAAO,SAAUX,GACpC,MAAuB,QAAhBA,EAAMa,SAGNtC,EAAI,EAAGA,EAAIuC,EAAU5B,OAAQX,IACpCyB,EAAMe,KAAKD,EAAUvC,GAAGyC,cAG1B,GAAmB,EAAfhB,EAAMd,OAAY,CACpB,IAAI+B,EAAMjB,EAAMkB,OAAO,SAAUC,EAAUC,GACzC,OAAOA,EAAWD,IAEpB7B,EAAM2B,EAAMjB,EAAMd,QAhClBmC,GAuCJ,WACE,GAAI9B,GAAoC,EAArBA,EAAYL,OAAY,CACzC,IAAIoC,EAAa5B,EAAkB6B,QACnChC,EAAYiC,QAAQ,SAAUC,GAC5BH,EAAWI,IAAI,IAAIC,OAAOF,EAAOf,WAE3BhB,EAAkBkC,MAC1BpC,EAAQE,EAAkBmC,cAAgB,EAGhC,GAFVpC,EAAUH,IAGRQ,EAAWgC,UAAUC,OAAO,UAC5B5B,EAAUV,KAEVK,EAAWI,UAAY,4EACvBJ,EAAWgC,UAAUC,OAAO,WAG9B9B,KAxDA+B,IAGF/B,IAXFgC,GAsEAvC,EAAkBwC,SAElB,WACUC,KAAKP,MACbpC,EAAQ2C,KAAKN,cAAgB,EAEnB,EAANvC,IACFQ,EAAWgC,UAAUC,OAAO,UAC5B5B,EAAUV,MA0BZ,KAAK,GAAG,CAAC","file":"client.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n// -------- variables -------- //\nvar list;\nvar clientNumber;\nvar clientNumberInput = document.querySelector(\".client__number\");\nvar clientTime = document.querySelector(\".client__time\");\nvar clientText = document.querySelector(\".client__text\");\nvar clientInfo = document.querySelector(\".client__info\");\nvar times = [];\nvar avg;\nvar listWaiting;\nvar value;\nvar index;\nvar thisAvg;\ncheckForLocalStorage(); // -------- check if there is a client list in localStorage -------- //\n\nfunction checkForLocalStorage() {\n  if (localStorage.list) {\n    list = JSON.parse(localStorage.getItem('list'));\n    clientNumber = list[list.length - 1].number + 1;\n    filterWaiting();\n    timeToWait();\n    makeSelection();\n  }\n\n  checkIfCLientListEmpty();\n}\n\n; // -------- filter clients with status \"waiting\" -------- //\n\nfunction filterWaiting() {\n  if (localStorage.list) {\n    listWaiting = list.filter(function (clients) {\n      return clients.status == \"waiting\";\n    });\n  }\n}\n\n; // -------- count average time previous clents have been served -------- //\n\nfunction timeToWait() {\n  var timesList = list.filter(function (times) {\n    return times.status == \"done\";\n  });\n\n  for (var i = 0; i < timesList.length; i++) {\n    times.push(timesList[i].timeServiced);\n  }\n\n  if (times.length > 0) {\n    var sum = times.reduce(function (previous, current) {\n      return current += previous;\n    });\n    avg = sum / times.length;\n    return avg;\n  }\n}\n\n; // -------- make waiting clients selection options -------- //\n\nfunction makeSelection() {\n  if (listWaiting && listWaiting.length > 0) {\n    var optionList = clientNumberInput.options;\n    listWaiting.forEach(function (option) {\n      optionList.add(new Option(option.number));\n    });\n    value = clientNumberInput.value;\n    index = clientNumberInput.selectedIndex + 1;\n    thisAvg = avg;\n\n    if (avg > 0) {\n      clientText.classList.remove(\"hidden\");\n      secMinVal(thisAvg);\n    } else {\n      clientText.innerHTML = \"Aptarnautų klientų dar nebuvo, negalime numatyti, kiek laiko liko laukti.\";\n      clientText.classList.remove(\"hidden\");\n    }\n\n    checkIfCLientListEmpty();\n  }\n}\n\n; // -------- listen for selection changes -------- //\n\nclientNumberInput.onchange = changeListener;\n\nfunction changeListener() {\n  value = this.value;\n  index = this.selectedIndex + 1;\n\n  if (avg > 0) {\n    clientText.classList.remove(\"hidden\");\n    secMinVal(thisAvg);\n  }\n}\n\n; // -------- check if waiting clients' list is empty -------- //\n\nfunction checkIfCLientListEmpty() {\n  if (clientNumberInput.innerHTML == 0) {\n    clientInfo.innerHTML = \"Laukiančių lankytojų nėra.\";\n  }\n}\n\n; // -------- decide whether to display sec, min or hours -------- //\n\nfunction secMinVal(thisAvg) {\n  if (thisAvg <= 60) {\n    clientTime.innerHTML = \": \" + Math.round(thisAvg) * index + \" sec.\";\n  } else if (thisAvg > 60 && thisAvg <= 3600) {\n    clientTime.innerHTML = \": \" + Math.round(thisAvg / 60) * index + \" min.\";\n  } else {\n    clientTime.innerHTML = \": \" + Math.round(thisAvg / 3600) * index + \" val.\";\n  }\n}\n\n;\n\n},{}]},{},[1]);\n"]}